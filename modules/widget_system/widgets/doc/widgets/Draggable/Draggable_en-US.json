{"name":"Draggable","path":"/src/widgets/drag_target.dart","parents":["StatefulWidget","Widget"],"desc":" A widget that can be dragged from to a [DragTarget].","fields":[{"name":"data","type":"T?","desc":"The data that will be dropped by this draggable."},{"name":"axis","type":"Axis?","desc":"The [Axis] to restrict this draggable's movement, if specified."},{"name":"child","type":"Widget","required":true,"desc":"The widget below this widget in the tree."},{"name":"childWhenDragging","type":"Widget?","desc":"The widget to display instead of [child] when one or more drags are under way."},{"name":"feedback","type":"Widget","required":true,"desc":"The widget to show under the pointer when a drag is under way."},{"name":"feedbackOffset","type":"Offset","required":true,"desc":"The feedbackOffset can be used to set the hit test target point for the purposes of finding a drag target. It is especially useful if the feedback is transformed compared to the child."},{"name":"dragAnchorStrategy","type":"DragAnchorStrategy","required":true,"desc":"A strategy that is used by this draggable to get the anchor offset when it is dragged."},{"name":"ignoringFeedbackSemantics","type":"bool","required":true,"desc":"Whether the semantics of the [feedback] widget is ignored when building the semantics tree."},{"name":"ignoringFeedbackPointer","type":"bool","required":true,"desc":"Whether the [feedback] widget is ignored during hit testing."},{"name":"affinity","type":"Axis?","desc":"Controls how this widget competes with other gestures to initiate a drag."},{"name":"maxSimultaneousDrags","type":"int?","desc":"How many simultaneous drags to support."},{"name":"onDragStarted","type":"VoidCallback?","desc":"Called when the draggable starts being dragged."},{"name":"onDragUpdate","type":"DragUpdateCallback?","desc":"Called when the draggable is dragged."},{"name":"onDraggableCanceled","type":"DraggableCanceledCallback?","desc":"Called when the draggable is dropped without being accepted by a [DragTarget]."},{"name":"onDragCompleted","type":"VoidCallback?","desc":"Called when the draggable is dropped and accepted by a [DragTarget]."},{"name":"onDragEnd","type":"DragEndCallback?","desc":"Called when the draggable is dropped."},{"name":"rootOverlay","type":"bool","required":true,"desc":"Whether the feedback widget will be put on the root [Overlay]."},{"name":"hitTestBehavior","type":"HitTestBehavior","required":true,"desc":"How to behave during hit test."},{"name":"allowedButtonsFilter","type":"AllowedButtonsFilter?","desc":"{@macro flutter.gestures.multidrag._allowedButtonsFilter}"}],"id":103,"lever":4,"family":1,"linkIds":[104,105],"nodes":[{"file":"node1_base.dart","name":"Basic Usage of Draggable","desc":["【child】 : child   【Widget】","【feedback】 : child during dragging   【Widget】","【axis】 : axis of dragging   【Axis】"]},{"file":"node2_data.dart","name":"Combined Usage of Draggable and DragTarget","desc":["【data】 : data   【T】","【onDragStarted】 : start dragging   【Function()】","【onDragEnd】 : end dragging   【Function(DraggableDetails)】","【onDragCompleted】 : drag completed   【Function()】","【onDraggableCanceled】 : drag canceled   【Function(Velocity,Offset)】","【onChanged】 : callback when changed   【Function(T)】"]},{"file":"node3_use.dart","name":"Other Usages of Draggable","desc":["Some events can be handled based on dragging, such as deletion, querying, pop-ups, etc."]}]}