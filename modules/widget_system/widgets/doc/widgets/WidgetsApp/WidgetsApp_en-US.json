{"name":"WidgetsApp","path":"/src/widgets/app.dart","parents":["StatefulWidget","Widget"],"desc":" A convenience widget that wraps a number of widgets that are commonly required for an application.","fields":[{"name":"navigatorKey","type":"GlobalKey<NavigatorState>?","desc":"{@template flutter.widgets.widgetsApp.navigatorKey} A key to use when building the [Navigator]."},{"name":"onGenerateRoute","type":"RouteFactory?","desc":"{@template flutter.widgets.widgetsApp.onGenerateRoute} The route generator callback used when the app is navigated to a named route."},{"name":"onGenerateInitialRoutes","type":"InitialRouteListFactory?","desc":"{@template flutter.widgets.widgetsApp.onGenerateInitialRoutes} The routes generator callback used for generating initial routes if [initialRoute] is provided."},{"name":"pageRouteBuilder","type":"PageRouteFactory?","desc":"The [PageRoute] generator callback used when the app is navigated to a named route."},{"name":"routeInformationParser","type":"RouteInformationParser<Object>?","desc":"{@template flutter.widgets.widgetsApp.routeInformationParser} A delegate to parse the route information from the [routeInformationProvider] into a generic data type to be processed by the [routerDelegate] at a later stage."},{"name":"routerDelegate","type":"RouterDelegate<Object>?","desc":"{@template flutter.widgets.widgetsApp.routerDelegate} A delegate that configures a widget, typically a [Navigator], with parsed result from the [routeInformationParser]."},{"name":"backButtonDispatcher","type":"BackButtonDispatcher?","desc":"{@template flutter.widgets.widgetsApp.backButtonDispatcher} A delegate that decide whether to handle the Android back button intent."},{"name":"routeInformationProvider","type":"RouteInformationProvider?","desc":"{@template flutter.widgets.widgetsApp.routeInformationProvider} A object that provides route information through the [RouteInformationProvider.value] and notifies its listener when its value changes."},{"name":"routerConfig","type":"RouterConfig<Object>?","desc":"{@template flutter.widgets.widgetsApp.routerConfig} An object to configure the underlying [Router]."},{"name":"home","type":"Widget?","desc":"{@template flutter.widgets.widgetsApp.home} The widget for the default route of the app ([Navigator.defaultRouteName], which is `/`)."},{"name":"routes","type":"Map<String, WidgetBuilder>?","desc":"The application's top-level routing table."},{"name":"onUnknownRoute","type":"RouteFactory?","desc":"{@template flutter.widgets.widgetsApp.onUnknownRoute} Called when [onGenerateRoute] fails to generate a route, except for the [initialRoute]."},{"name":"onNavigationNotification","type":"NotificationListenerCallback<NavigationNotification>?","desc":"{@template flutter.widgets.widgetsApp.onNavigationNotification} The callback to use when receiving a [NavigationNotification]."},{"name":"initialRoute","type":"String?","desc":"{@template flutter.widgets.widgetsApp.initialRoute} The name of the first route to show, if a [Navigator] is built."},{"name":"navigatorObservers","type":"List<NavigatorObserver>?","desc":"{@template flutter.widgets.widgetsApp.navigatorObservers} The list of observers for the [Navigator] created for this app."},{"name":"builder","type":"TransitionBuilder?","desc":"{@template flutter.widgets.widgetsApp.builder} A builder for inserting widgets above the [Navigator] or - when the [WidgetsApp.router] constructor is used - above the [Router] but below the other widgets created by the [WidgetsApp] widget, or for replacing the [Navigator]/[Router] entirely."},{"name":"title","type":"String?","desc":"{@template flutter.widgets.widgetsApp.title} A one-line description used by the device to identify the app for the user."},{"name":"onGenerateTitle","type":"GenerateAppTitle?","desc":"{@template flutter.widgets.widgetsApp.onGenerateTitle} If non-null this callback function is called to produce the app's title string, otherwise [title] is used."},{"name":"textStyle","type":"TextStyle?","desc":"The default text style for [Text] in the application."},{"name":"color","type":"Color","required":true,"desc":"{@template flutter.widgets.widgetsApp.color} The primary color to use for the application in the operating system interface."},{"name":"locale","type":"Locale?","desc":"{@template flutter.widgets.widgetsApp.locale} The initial locale for this app's [Localizations] widget is based on this value."},{"name":"localizationsDelegates","type":"Iterable<LocalizationsDelegate<dynamic>>?","desc":"{@template flutter.widgets.widgetsApp.localizationsDelegates} The delegates for this app's [Localizations] widget."},{"name":"localeListResolutionCallback","type":"LocaleListResolutionCallback?","desc":"{@template flutter.widgets.widgetsApp.localeListResolutionCallback} This callback is responsible for choosing the app's locale when the app is started, and when the user changes the device's locale."},{"name":"localeResolutionCallback","type":"LocaleResolutionCallback?","desc":"{@macro flutter.widgets.widgetsApp.localeListResolutionCallback}"},{"name":"supportedLocales","type":"Iterable<Locale>","required":true,"desc":"{@template flutter.widgets.widgetsApp.supportedLocales} The list of locales that this app has been localized for."},{"name":"showPerformanceOverlay","type":"bool","required":true,"desc":"Turns on a performance overlay."},{"name":"showSemanticsDebugger","type":"bool","required":true,"desc":"Turns on an overlay that shows the accessibility information reported by the framework."},{"name":"debugShowWidgetInspector","type":"bool","required":true,"desc":"Turns on an overlay that enables inspecting the widget tree."},{"name":"exitWidgetSelectionButtonBuilder","type":"ExitWidgetSelectionButtonBuilder?","desc":"Builds the widget the [WidgetInspector] uses to exit selection mode."},{"name":"moveExitWidgetSelectionButtonBuilder","type":"MoveExitWidgetSelectionButtonBuilder?","desc":"Builds the widget the [WidgetInspector] uses to move the exit selection mode button."},{"name":"tapBehaviorButtonBuilder","type":"TapBehaviorButtonBuilder?","desc":"Builds the widget the [WidgetInspector] uses to change the default behavior when tapping on widgets in the app."},{"name":"debugShowCheckedModeBanner","type":"bool","required":true,"desc":"{@template flutter.widgets.widgetsApp.debugShowCheckedModeBanner} Turns on a little \"DEBUG\" banner in debug mode to indicate that the app is in debug mode. This is on by default (in debug mode), to turn it off, set the constructor argument to false. In release mode this has no effect."},{"name":"shortcuts","type":"Map<ShortcutActivator, Intent>?","desc":"{@template flutter.widgets.widgetsApp.shortcuts} The default map of keyboard shortcuts to intents for the application."},{"name":"actions","type":"Map<Type, Action<Intent>>?","desc":"{@template flutter.widgets.widgetsApp.actions} The default map of intent keys to actions for the application."},{"name":"restorationScopeId","type":"String?","desc":"{@template flutter.widgets.widgetsApp.restorationScopeId} The identifier to use for state restoration of this app."},{"name":"useInheritedMediaQuery","type":"bool","required":true,"desc":"{@template flutter.widgets.widgetsApp.useInheritedMediaQuery} Deprecated. This setting is now ignored."}],"id":236,"lever":2,"family":1,"linkIds":[65,156],"nodes":[{"file":"node1_base.dart","name":"Basic Usage of WidgetsApp","desc":["【pageRouteBuilder】 : *Route Builder   【PageRouteFactory】","【color】: *Color    【Color】","【debugShowWidgetInspector】: Whether to display the widget inspector   【bool】","Other properties are basically the same as MaterialApp, see details there."]}]}