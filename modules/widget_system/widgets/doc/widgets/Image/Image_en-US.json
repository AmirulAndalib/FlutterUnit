{"name":"Image","path":"/src/widgets/image.dart","parents":["StatefulWidget","Widget"],"desc":" A widget that displays an image.","fields":[{"name":"image","type":"ImageProvider","required":true,"desc":"The image to display."},{"name":"frameBuilder","type":"ImageFrameBuilder?","desc":"A builder function responsible for creating the widget that represents this image."},{"name":"loadingBuilder","type":"ImageLoadingBuilder?","desc":"A builder that specifies the widget to display to the user while an image is still loading."},{"name":"errorBuilder","type":"ImageErrorWidgetBuilder?","desc":"A builder function that is called if an error occurs during image loading."},{"name":"width","type":"double?","desc":"If non-null, require the image to have this width (in logical pixels)."},{"name":"height","type":"double?","desc":"If non-null, require the image to have this height (in logical pixels)."},{"name":"color","type":"Color?","desc":"If non-null, this color is blended with each image pixel using [colorBlendMode]."},{"name":"opacity","type":"Animation<double>?","desc":"If non-null, the value from the [Animation] is multiplied with the opacity of each image pixel before painting onto the canvas."},{"name":"filterQuality","type":"FilterQuality","required":true,"desc":"The rendering quality of the image."},{"name":"colorBlendMode","type":"BlendMode?","desc":"Used to combine [color] with this image."},{"name":"fit","type":"BoxFit?","desc":"How to inscribe the image into the space allocated during layout."},{"name":"alignment","type":"AlignmentGeometry","required":true,"desc":"How to align the image within its bounds."},{"name":"repeat","type":"ImageRepeat","required":true,"desc":"How to paint any portions of the layout bounds not covered by the image."},{"name":"centerSlice","type":"Rect?","desc":"The center slice for a nine-patch image."},{"name":"matchTextDirection","type":"bool","required":true,"desc":"Whether to paint the image in the direction of the [TextDirection]."},{"name":"gaplessPlayback","type":"bool","required":true,"desc":"Whether to continue showing the old image (true), or briefly show nothing (false), when the image provider changes. The default value is false."},{"name":"semanticLabel","type":"String?","desc":"A Semantic description of the image."},{"name":"excludeFromSemantics","type":"bool","required":true,"desc":"Whether to exclude this image from semantics."},{"name":"isAntiAlias","type":"bool","required":true,"desc":"Whether to paint the image with anti-aliasing."}],"id":38,"lever":5,"family":1,"linkIds":[8,87],"nodes":[{"file":"node1_base.dart","name":"Load images from resource files and the network","desc":["Image.asset loads resource images,"]},{"file":"node2_fit.dart","name":"Image adaptation mode","desc":["【fit】 : Adaptation mode*7   【BoxFit】,"]},{"file":"node3_alignment.dart","name":"Image alignment mode","desc":["【alignment】 : Color   【AlignmentGeometry】","    Common nine static constants of the Alignment class, but custom positions are also possible"]},{"file":"node4_colorBlendMode.dart","name":"Image color and blending mode","desc":["【color】 : Color   【Color】","【colorBlendMode】: Blending mode*29 【BlendMode】"]},{"file":"node5_repeat.dart","name":"Image repeat mode","desc":["【repeat】 : Repeat mode*4   【ImageRepeat】"]},{"file":"node6_centerSlice.dart","name":"Image partial zoom implementation","desc":["【centerSlice】 : Reserved area   【Rect】"]}]}