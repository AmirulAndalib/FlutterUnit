{"name":"IconButton","path":"/src/material/icon_button.dart","parents":["StatelessWidget","Widget"],"desc":" A Material Design icon button.","fields":[{"name":"iconSize","type":"double?","desc":"The size of the icon inside the button."},{"name":"visualDensity","type":"VisualDensity?","desc":"Defines how compact the icon button's layout will be."},{"name":"padding","type":"EdgeInsetsGeometry?","desc":"The padding around the button's icon. The entire padded icon will react to input gestures."},{"name":"alignment","type":"AlignmentGeometry?","desc":"Defines how the icon is positioned within the IconButton."},{"name":"splashRadius","type":"double?","desc":"The splash radius."},{"name":"icon","type":"Widget","required":true,"desc":"The icon to display inside the button."},{"name":"focusColor","type":"Color?","desc":"The color for the button when it has the input focus."},{"name":"hoverColor","type":"Color?","desc":"The color for the button when a pointer is hovering over it."},{"name":"color","type":"Color?","desc":"The color to use for the icon inside the button, if the icon is enabled. Defaults to leaving this up to the [icon] widget."},{"name":"splashColor","type":"Color?","desc":"The primary color of the button when the button is in the down (pressed) state. The splash is represented as a circular overlay that appears above the [highlightColor] overlay. The splash overlay has a center point that matches the hit point of the user touch event. The splash overlay will expand to fill the button area if the touch is held for long enough time. If the splash color has transparency then the highlight and button color will show through."},{"name":"highlightColor","type":"Color?","desc":"The secondary color of the button when the button is in the down (pressed) state. The highlight color is represented as a solid color that is overlaid over the button color (if any). If the highlight color has transparency, the button color will show through. The highlight fades in quickly as the button is held down."},{"name":"disabledColor","type":"Color?","desc":"The color to use for the icon inside the button, if the icon is disabled. Defaults to the [ThemeData.disabledColor] of the current [Theme]."},{"name":"onPressed","type":"VoidCallback?","desc":"The callback that is called when the button is tapped or otherwise activated."},{"name":"onHover","type":"ValueChanged<bool>?","desc":"The callback that is called when the button is hovered."},{"name":"onLongPress","type":"VoidCallback?","desc":"The callback that is called when the button is long-pressed."},{"name":"mouseCursor","type":"MouseCursor?","desc":"{@macro flutter.material.RawMaterialButton.mouseCursor}"},{"name":"focusNode","type":"FocusNode?","desc":"{@macro flutter.widgets.Focus.focusNode}"},{"name":"autofocus","type":"bool","required":true,"desc":"{@macro flutter.widgets.Focus.autofocus}"},{"name":"tooltip","type":"String?","desc":"Text that describes the action that will occur when the button is pressed."},{"name":"enableFeedback","type":"bool?","desc":"Whether detected gestures should provide acoustic and/or haptic feedback."},{"name":"constraints","type":"BoxConstraints?","desc":"Optional size constraints for the button."},{"name":"style","type":"ButtonStyle?","desc":"Customizes this button's appearance."},{"name":"isSelected","type":"bool?","desc":"The optional selection state of the icon button."},{"name":"selectedIcon","type":"Widget?","desc":"The icon to display inside the button when [isSelected] is true. This property can be null. The original [icon] will be used for both selected and unselected status if it is null."}],"id":30,"lever":2,"family":0,"linkIds":[],"nodes":[{"file":"node1_base.dart","name":"IconButton Properties","desc":["【icon】: Icon component   【Widget】","【tooltip】: Long press tooltip text   【String】","【highlightColor】: Long press highlight color   【Color】","【splashColor】: Ripple color   【Color】","【onPressed】: Click event   【Function】"]}]}