{
  "id": 134,
  "name": "DayPicker",
  "localName": "Выбор даты",
  "info": "Компонент для выбора даты, который позволяет указать текущую дату, выбранную дату, отображаемый месяц и т.д., а также получать события выбора даты.",
  "lever": 3,
  "family": 0,
  "deprecated": -1,
  "linkIds": [
    135,
    136
  ],
  "nodes": [
    {
      "file": "node1_base.dart",
      "name": "Основное использование DayPicker",
      "desc": [
        "【selectedDate】 : Выбранная дата   【DateTime】",
        "【currentDate】 : Текущая дата   【DateTime】",
        "【firstDate】 : Ограничение на самую раннюю дату   【DateTime】",
        "【lastDate】 : Ограничение на самую позднюю дату   【DateTime】",
        "【displayedMonth】 : Отображаемый месяц   【DateTime】",
        "【onChanged】 : Обратный вызов при клике  【Function(DateTime)】",
        "    ",
        "import 'package:flutter/material.dart';",
        "",
        "class CustomDayPicker extends StatelessWidget{",
        "",
        "  const CustomDayPicker({Key? key) : super(key: key);",
        "",
        "  final String info =",
        "      'DayPicker, компонент выбора даты, ушел в историю с выходом Flutter 3.0. Его заменил CalendarDatePicker, компонент выбора даты из календаря.';",
        "",
        "  @override",
        "  Widget build(BuildContext context) {",
        "    return Container(",
        "      color: Colors.blue.withOpacity(0.1),",
        "      padding: const EdgeInsets.all(10),",
        "      margin: const EdgeInsets.all(10),",
        "      child: Text(info),",
        "    );",
        "  ",
        "",
        "   final DateTime _date = DateTime.now();",
        "  ",
        "   @override",
        "   Widget build(BuildContext context) {",
        "     return SizedBox(",
        "       height: 350,",
        "       child: DayPicker(",
        "           selectedDate: _date,",
        "           currentDate: DateTime.now(),",
        "           onChanged: (date)=> setState(() => _date = date),",
        "           firstDate:  DateTime(2018),",
        "           lastDate: DateTime(2030),",
        "           displayedMonth: DateTime.now()",
        "       ),"
      ]
    }
  ]
}